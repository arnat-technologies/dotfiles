#!/bin/bash

# alias dknexus='mkdir $DATA/nexus-data 2>/dev/null; docker run --rm -it -p 8081:8081 -v $DATA/nexus-data:/nexus-data sonatype/nexus3:latest'

# #  __                  _   _
# # / _|                | | (_)
# #| |_ _   _ _ __   ___| |_ _  ___  _ __  ___
# #|  _| | | | '_ \ / __| __| |/ _ \| '_ \/ __|
# #| | | |_| | | | | (__| |_| | (_) | | | \__ \
# #|_|  \__,_|_| |_|\___|\__|_|\___/|_| |_|___/

# dkb() {
#   docker exec -it $(docker ps -aqf "name=$1") /bin/bash
# }

# dka() {
#   docker exec -it $(docker ps -aqf "name=$1") /bin/ash
# }

# dki() {
#   for container in "$@"; do
#     docker inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}" "${container}"
#   done
# }

# dks() {
#   if [ $# -eq 0 ]; then
#     docker stop $(docker ps -aq --no-trunc)
#   else
#     for container in "$@"; do
#       docker stop $(docker ps -aq --no-trunc | grep ${container})
#     done
#   fi
# }

# dkrmc() {
#   if [ $# -eq 0 ]; then
#     docker rm $(docker ps -aq --no-trunc)
#   else
#     for container in "$@"; do
#       docker rm $(docker ps -aq --no-trunc | grep ${container})
#     done
#   fi
# }

# dkrmi() {
#   if [ $# -eq 0 ]; then
#     docker rmi $(docker images --filter 'dangling=true' -aq --no-trunc)
#   else
#     for container in "$@"; do
#       docker rmi $(docker images --filter 'dangling=true' -aq --no-trunc | grep ${container})
#     done
#   fi
# }

# dkp() {
#   docker tag $1 $1
#   docker push $1
# }
