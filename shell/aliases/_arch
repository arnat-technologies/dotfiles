#!/bin/bash

alias tossh="puttygen id_dsa.ppk -O private-openssh -o id_dsa"
alias generate_key="openssl genrsa -out rsa_key.pri 2048; openssl rsa -in rsa_key.pri -out rsa_key.pub -outform PEM -pubout"

alias pbcopy='xclip -selection clipboard'
alias pbpaste='xclip -selection clipboard -o'

alias tmux='tmux -2'
alias tmuxa='tmux attach -t'
alias tmuxn='tmux new -s'
alias tmuxx='tmux kill-session -t'
alias tmuxd='tmux detach -a'
alias tmuxls='tmux ls'

alias tigs='tig status'

alias yayu="yay  -Syu"

alias navip='navi --print'

navis() {
  navi --query "$1" --best-match
}

alias changebg="feh --randomize --bg-fill ~/.betterlockscreen/*"
changelock() {
  rm -rf ~/.cache/i3lock
  image=~/.betterlockscreen/$(shuf -i 127-20654 -n 1).jpg
  while [ ! -f "$image" ]; do
    image=~/.betterlockscreen/$(shuf -i 127-20654 -n 1).jpg
  done
  betterlockscreen -u $image 2>/dev/null &
}

alias gpgkey="gpg --armor --export"
alias gpglist="gpg --list-secret-keys --keyid-format LONG"
alias gpgexport="gpg --armor --export $1" # export sfter 4096/######
alias gpgkill="gpgconf --kill gpg-agent"

gpgen() {
  local EMAIL=${1:-"roy.surjano@arnat.digital"}
  local USER=${2:-"Roy Surjano"}
  echo ">>> USING USER: $USER"
  echo ">>> USING EMAIL: $EMAIL"
  gpg --batch --gen-key <<EOF
Key-Type: 1
Key-Length: 2048
Subkey-Type: 1
Subkey-Length: 2048
Name-Real: $USER
Name-Email: $EMAIL
Expire-Date: 0
EOF
}

# if [[ "$(is_installed docker)" != "0" ]] ; then
#   . "$HOME/.shell/docker"
# fi

# --------------------------------------------------
# YTDL
#--------------------------------------------------

# if [[ "$(is_installed ytdl)" != "0" ]]; then
#   alias ytdlv="ytdl $1 -o {title}"
# fi

# --------------------------------------------------
# YOUTUBE-DLC
#--------------------------------------------------

# if [[ "$(is_installed youtube-dlc)" != "0" ]]; then
#   alias ytdlp="youtube-dlc -o '%(playlist)s/%(playlist_index)s - %(title)s' $1"
#   alias ytdlc="youtube-dlc -f best -ciw -o '%(channel)s/%(title)s.%(ext)s' -v $1"
# fi

# --------------------------------------------------
# VISUAL STUDIO CODE
#--------------------------------------------------

# if [[ "$(is_installed yarn)" != "0" ]]; then
#   c() { [ $# -eq 0 ] && code . || code "$@"; }  # VSCODE

#   alias devcontainer=". $DOTFILES/.generators/devcontainer.sh"

# fi

function bbucket_fetch_repos() {
  if [[ -z "$1" ]]; then
    echo "Must provide USER/PASS/TEAM for cloning all bitbucket repos (max 100)"
  else
    http "https://api.bitbucket.org/2.0/repositories/$3?pagelen=100" -a $1:$2 | jq -r '.values[] | .links.clone[1].href' >"bbucket__user-$1__team-$3_.txt"
    echo ">>> succesfull cloned!"
  fi
}

function up() {
  if [[ "$#" < 1 ]]; then
    cd ..
  else
    CDSTR=""
    for i in {1..$1}; do
      CDSTR="../$CDSTR"
    done
    cd $CDSTR
  fi
}

# mv, rm, cp, gunzip
alias mv='mv -v'
alias rm='rm -i -v'
alias cp='cp -v'

alias hosts='sudo $EDITOR /etc/hosts'
alias where=which

# List Directories/Files
alias l="ls -lF"

# alias la="ls -la"
alias ls="exa --git --group-directories-first"
alias ll="ls -l"
alias la="ll -a"
alias lk="ll -s=size"              # Sorted by size
alias lm="ll -s=modified"          # Sorted by modified date
alias lc="ll --created -s=created" # Sorted by created date

alias lsd='ls -l | grep "^d"'

function isPortOpened() {
  RESULT=$(curl --data "port=$1&IP=$(curl ifconfig.me/ip)" http://www.canyouseeme.org | grep -i success)

  if [ -z $RESULT ]; then
    echo -e "\nThe port $1 is NOT open!"
  else
    echo -e "\nThe port $1 IS open!"
  fi
}
